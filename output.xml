<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.11.1 on win32)" generated="20230414 22:21:48.307" rpa="false" schemaversion="3">
<suite id="s1" name="TC4 COMPLEX JSON" source="E:\Skillsets\Automation_Testing\Projects\Robot_Framework\Rest_API\TestCases\TC4_COMPLEX_JSON.robot">
<test id="s1-t1" name="ParseJSON: Returns all the video games" line="11">
<kw name="Create Session" library="RequestsLibrary">
<arg>mysession</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20230414 22:21:48.702" level="INFO">Creating Session using : alias=mysession, url=http://localhost:8080, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20230414 22:21:48.702" endtime="20230414 22:21:48.702"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${header}</var>
<arg>Accept=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20230414 22:21:48.717" level="INFO">${header} = {'Accept': 'application/json'}</msg>
<status status="PASS" starttime="20230414 22:21:48.717" endtime="20230414 22:21:48.717"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>mysession</arg>
<arg>app/videogames</arg>
<arg>headers=${header}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20230414 22:21:48.733" level="INFO">GET Request : url=http://localhost:8080/app/videogames 
 path_url=/app/videogames 
 headers={'User-Agent': 'python-requests/2.28.2', 'Accept-Encoding': 'gzip, deflate', 'Accept': 'application/json', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20230414 22:21:48.733" level="INFO">GET Response : url=http://localhost:8080/app/videogames 
 status=200, reason= 
 headers={'Content-Type': 'application/json', 'Content-Length': '1183', 'Date': 'Fri, 14 Apr 2023 16:51:48 GMT'} 
 body=[{"id":1,"name":"Resident Evil 4","releaseDate":"2005-10-01","reviewScore":85,"category":"Shooter","rating":"Universal"},{"id":2,"name":"Gran Turismo 3","releaseDate":"2001-03-10","reviewScore":91,"category":"Driving","rating":"Universal"},{"id":3,"name":"Tetris","releaseDate":"1984-06-25","reviewScore":88,"category":"Puzzle","rating":"Universal"},{"id":4,"name":"Super Mario 64","releaseDate":"1996-10-20","reviewScore":90,"category":"Platform","rating":"Universal"},{"id":5,"name":"The Legend of Zelda: Ocarina of Time","releaseDate":"1998-12-10","reviewScore":93,"category":"Adventure","rating":"PG-13"},{"id":6,"name":"Doom","releaseDate":"1993-02-18","reviewScore":81,"category":"Shooter","rating":"Mature"},{"id":7,"name":"Minecraft","releaseDate":"2011-12-05","reviewScore":77,"category":"Puzzle","rating":"Universal"},{"id":8,"name":"SimCity 2000","releaseDate":"1994-09-11","reviewScore":88,"category":"Strategy","rating":"Universal"},{"id":9,"name":"Final Fantasy VII","releaseDate":"1997-08-20","reviewScore":97,"category":"RPG","rating":"PG-13"},{"id":10,"name":"Grand Theft Auto III","releaseDate":"2001-04-23","reviewScore":90,"category":"Driving","rating":"Mature"}] 
 </msg>
<msg timestamp="20230414 22:21:48.733" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20230414 22:21:48.717" endtime="20230414 22:21:48.733"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${status_code}</var>
<arg>${resp.status_code}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230414 22:21:48.733" level="INFO">${status_code} = 200</msg>
<status status="PASS" starttime="20230414 22:21:48.733" endtime="20230414 22:21:48.733"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${status_code}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230414 22:21:48.733" endtime="20230414 22:21:48.733"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${status_code}</arg>
<arg>200</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230414 22:21:48.733" endtime="20230414 22:21:48.733"/>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<var>${category}</var>
<arg>${resp.json()}</arg>
<arg>$[0].category</arg>
<doc>Get Value From JSON using JSONPath</doc>
<msg timestamp="20230414 22:21:48.764" level="INFO">${category} = ['Shooter']</msg>
<status status="PASS" starttime="20230414 22:21:48.733" endtime="20230414 22:21:48.764"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${category[0]}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230414 22:21:48.764" endtime="20230414 22:21:48.764"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${category[0]}</arg>
<arg>Shooter</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20230414 22:21:48.764" endtime="20230414 22:21:48.764"/>
</kw>
<status status="PASS" starttime="20230414 22:21:48.702" endtime="20230414 22:21:48.764"/>
</test>
<status status="PASS" starttime="20230414 22:21:48.307" endtime="20230414 22:21:48.764"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="TC4 COMPLEX JSON">TC4 COMPLEX JSON</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
